name: Advanced Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

jobs:
  code-coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov coverage
          
      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=meridianalgo --cov-report=xml --cov-report=html --cov-report=term
        continue-on-error: true
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          
      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install radon xenon mccabe
          
      - name: Run Radon (Complexity)
        run: |
          echo "=== Cyclomatic Complexity ===" >> complexity-report.txt
          radon cc meridianalgo/ -a -s >> complexity-report.txt
          echo "" >> complexity-report.txt
          echo "=== Maintainability Index ===" >> complexity-report.txt
          radon mi meridianalgo/ -s >> complexity-report.txt
          cat complexity-report.txt
        continue-on-error: true
        
      - name: Upload complexity report
        uses: actions/upload-artifact@v4
        with:
          name: complexity-report
          path: complexity-report.txt

  type-checking:
    name: Static Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy types-requests types-PyYAML
          pip install -r requirements.txt
          
      - name: Run mypy
        run: |
          mypy meridianalgo/ --ignore-missing-imports --no-strict-optional || echo "Type checking completed with warnings"
        continue-on-error: true

  documentation-quality:
    name: Documentation Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pydocstyle interrogate
          
      - name: Check docstring coverage
        run: |
          interrogate meridianalgo/ -v || echo "Docstring coverage check completed"
        continue-on-error: true
        
      - name: Check docstring style
        run: |
          pydocstyle meridianalgo/ || echo "Docstring style check completed"
        continue-on-error: true

  dependency-graph:
    name: Dependency Graph Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pipdeptree
          pip install -r requirements.txt
          
      - name: Generate dependency tree
        run: |
          pipdeptree > dependency-tree.txt
          cat dependency-tree.txt
          
      - name: Upload dependency tree
        uses: actions/upload-artifact@v4
        with:
          name: dependency-tree
          path: dependency-tree.txt

  quality-summary:
    name: Quality Summary
    needs: [code-coverage, complexity-analysis, type-checking, documentation-quality, dependency-graph]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Create summary
        run: |
          echo "## Code Quality Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Coverage | ${{ needs.code-coverage.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Complexity | ${{ needs.complexity-analysis.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Type Checking | ${{ needs.type-checking.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Documentation | ${{ needs.documentation-quality.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependencies | ${{ needs.dependency-graph.result }} |" >> $GITHUB_STEP_SUMMARY
